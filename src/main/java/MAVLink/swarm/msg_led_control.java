/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE LED_CONTROL PACKING
package com.MAVLink.swarm;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * led_control
 */
public class msg_led_control extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_LED_CONTROL = 182;
    public static final int MAVLINK_MSG_LENGTH = 5;
    private static final long serialVersionUID = MAVLINK_MSG_ID_LED_CONTROL;

    
    /**
     * display shape
     */
    @Description("display shape")
    @Units("")
    public short type;
    
    /**
     * red value (0~256)
     */
    @Description("red value (0~256)")
    @Units("")
    public short r;
    
    /**
     * green value (0~256)
     */
    @Description("green value (0~256)")
    @Units("")
    public short g;
    
    /**
     * blue value (0~256)
     */
    @Description("blue value (0~256)")
    @Units("")
    public short b;
    
    /**
     * brightness
     */
    @Description("brightness")
    @Units("")
    public short brightness;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_LED_CONTROL;

        packet.payload.putUnsignedByte(type);
        packet.payload.putUnsignedByte(r);
        packet.payload.putUnsignedByte(g);
        packet.payload.putUnsignedByte(b);
        packet.payload.putUnsignedByte(brightness);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a led_control message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.type = payload.getUnsignedByte();
        this.r = payload.getUnsignedByte();
        this.g = payload.getUnsignedByte();
        this.b = payload.getUnsignedByte();
        this.brightness = payload.getUnsignedByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_led_control() {
        this.msgid = MAVLINK_MSG_ID_LED_CONTROL;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_led_control( short type, short r, short g, short b, short brightness) {
        this.msgid = MAVLINK_MSG_ID_LED_CONTROL;

        this.type = type;
        this.r = r;
        this.g = g;
        this.b = b;
        this.brightness = brightness;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_led_control( short type, short r, short g, short b, short brightness, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_LED_CONTROL;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.type = type;
        this.r = r;
        this.g = g;
        this.b = b;
        this.brightness = brightness;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_led_control(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_LED_CONTROL;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

              
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_LED_CONTROL - sysid:"+sysid+" compid:"+compid+" type:"+type+" r:"+r+" g:"+g+" b:"+b+" brightness:"+brightness+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_LED_CONTROL";
    }
}
        